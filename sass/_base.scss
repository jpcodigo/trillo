// MEDIA QUERY MANAGER

@mixin respond($breakpoint) {
  @if $breakpoint == littler {
    @media only screen and (max-width: 31.25em) {
      @content;
    }
  }
  @if $breakpoint == little {
    @media only screen and (max-width: 37.5em) {
      @content;
    }
  }
  @if $breakpoint == big {
    @media only screen and (max-width: 56.25em) {
      @content;
    }
  }
  @if $breakpoint == bigger {
    @media only screen and (max-width: 68.75em) {
      @content;
    }
  }
  @if $breakpoint == biggest {
    @media only screen and (max-width: 75em) {
      @content;
    }
  }
}

:root {
  --color-primary: #eb2f64;
  --color-primary-light: #ff3366;
  --color-primary-dark: #ba265d;

  --color-gray-light-1: #faf9f9;
  --color-gray-light-2: #f4f2f2;
  --color-gray-light-3: #f0eeee;
  --color-gray-light-4: #ccc;

  --color-gray-dark-1: #333;
  --color-gray-dark-2: #777;
  --color-gray-dark-3: #999;

  --shadow-light: 0 2rem 5rem rgba(0, 0, 0, 0.06);
  --shadow-dark: 0 2rem 6rem rgba(0, 0, 0, 0.3);

  --line: 1px solid var(--color-gray-light-2);
}

* {
  margin: 0;
  padding: 0;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%;

  @include respond(bigger) {
    font-size: 50%;
  }
}

body {
  font-family: "Open Sans", sans-serif;
  font-weight: 400;
  line-height: 1.6;
  color: var(--color-gray-dark-2);
  background-image: linear-gradient(
    to right bottom,
    var(--color-primary-light),
    var(--color-primary-dark)
  );
  background-size: cover;
  background-repeat: no-repeat;
  min-height: 100vh;
}

.paragraph:not(:last-of-type) {
  margin-bottom: 2rem;
}
